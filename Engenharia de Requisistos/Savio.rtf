{\rtf1\ansi\ansicpg1252\deff0\deflang1046{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang22\f0\fs22 Lista de Exerc\'edcios - 01\par
Pesquise e responda as quest\'f5es abaixo:\par
1. O que \'e9 o estudo de viabilidade e em que fase do ciclo de vida ele dever\'e1 ser realizado?\par
2. \'c9 poss\'edvel realizar o planejamento do desenvolvimento de sistema antes de conhecer os\par
seus requisitos? Por que?\par
3. Quais s\'e3o as diferen\'e7as entre o desenvolvimento de um produto de software gen\'e9rico e\par
um desenvolvimento de um produto de software personalizado.\par
4. Sobre as dificuldades encontradas no desenvolvimento de software, explique o que vem a\par
ser a conformidade, complexidade, alterabilidade e a invisibilidade.\par
5. Diferencie os modelos de processo Incremental, Cascata e Interativo.\par
6. Explique o modelo de processo de prototipagem. Quando ele deve ser usado e quais as\par
suas vantagens e desvantagens?\par
7. No modelo de processo espiral cada volta da espiral \'e9 dividida em quatro setores, cite e\par
explique cada um deles.\par
8. A perspectiva pr\'e1tica sobre o RUP descreve boas pr\'e1ticas da engenharia de software que\par
s\'e3o recomendadas para o uso no desenvolvimento de sistemas. Quais s\'e3o as seis boas\par
pr\'e1ticas recomendadas?\par
9. Scrum \'e9 considerado um m\'e9todo \'e1gil geral, mas, ao inv\'e9s das abordagens t\'e9cnicas\par
tradicionais espec\'edficas da engenharia de software, seu foco est\'e1 no gerenciamento do\par
desenvolvimento iterativo. Ele n\'e3o prescreve o uso de pr\'e1ticas de programa\'e7\'e3o, como\par
programa\'e7\'e3o em pares e desenvolvimento test-first, mas pode ser utilizado com\par
abordagens \'e1geis mais t\'e9cnicas, como XP, para fornecer um framework de gerenciamento\par
do projeto. O ciclo Sprint, do scrum, pode ser resumido em quatro passos; assinale-os.\par
 a) Avaliar; Desenvolver; Revisar; e, Entregar.\par
 b) Avaliar; Selecionar; Desenvolver; e, Revisar.\par
 c) Apresentar; Desenvolver; Revisar; e, Entregar.\par
 d) Apresentar; Selecionar; Desenvolver; e, Revisar.\par
Faculdade SENAC Goi\'e1s\par
10. Uma equipe Scrum elaborou uma lista de tarefas que se comprometeu a entregar em\par
um per\'edodo definido. A lista de tarefas foi extra\'edda de um produto com base em\par
prioridades pr\'e9-definidas por um profissional.\par
Um Programador fez as seguintes perguntas:\par
\u8722? Qual \'e9 a lista de tarefas?\par
\u8722? Quem define as prioridades?\par
\u8722? Qual a base de extra\'e7\'e3o da lista de tarefas?\par
\u8722? Qual \'e9 o per\'edodo previsto de entrega das tarefas listadas?\par
As respostas corretas, em sua respectiva ordem, s\'e3o\par
 a) Product Backlog \u8722? Product Owner \u8722? Sprint Backlog \u8722? Sprint.\par
 \strike b\strike0 ) Sprint Backlog \u8722? Product Owner \u8722? Product Backlog \u8722? Sprint.\par
 c) Sprint Backlog \u8722? Product Backlog \u8722? Product Owner \u8722? Sprint.\par
 d) Sprint \u8722? Product Backlog \u8722? Product Owner \u8722? Sprint Backlog.\par
 e) Product Owner \u8722? Product Backlog \u8722? Sprint Backlog \u8722? Sprint.\par
11. Sobre os princ\'edpios do m\'e9todo de desenvolvimento Scrum, que s\'e3o consistentes com o\par
manifesto \'e1gil, julgue as seguintes afirmativas e assinale a alternativa correta.\par
I - Testes e documenta\'e7\'e3o constantes s\'e3o realizados \'e0 medida que o produto \'e9\par
constru\'eddo.\par
II - O processo produz frequentes incrementos de software que podem ser\par
inspecionados, ajustados, testados, documentados e expandidos.\par
III - O trabalho de desenvolvimento e o pessoal que o realiza \'e9 dividido em parti\'e7\'f5es\par
claras, de baixo acoplamento, ou em pacotes.\par
a) Apenas as afirmativas I e II s\'e3o corretas.\par
b) Apenas as afirmativas I e III s\'e3o corretas.\par
c) Apenas as afirmativas II e III s\'e3o corretas.\par
\strike d\strike0 ) Todas as afirmativas s\'e3o corretas.\par
e) Nenhuma das afirmativas \'e9 correta.\par
12. Est\'e1 sendo implementado o XP (eXtreme Programming) em uma equipe de TI. Para\par
tanto, est\'e1 sendo colocada a seguinte s\'e9rie de pr\'e1ticas espec\'edficas da metodologia XP em\par
an\'e1lise:\par
I. Programa\'e7\'e3o Pareada (Pair Programming).\par
Faculdade SENAC Goi\'e1s\par
II. Fases pequenas (Small Releases).\par
III. Refatora\'e7\'e3o (Refactoring).\par
IV. Jogo de Planejamento (Planning Game).\par
Com base no seu conhecimento sobre a metodologia citada acima, suas pr\'e1ticas\par
espec\'edficas est\'e3o corretamente relacionadas nos itens:\par
a) I, II e III, apenas\par
b) I, II e IV, apenas\par
c) II, III e IV, apenas\par
d) I, III e IV, apenas\par
\strike e\strike0 ) I, II, III e IV\par
\par
\par
\par
Respostas \par
\par
\par
1) Um estudo de viabilidade \'e9 uma avalia\'e7\'e3o da praticidade de um projeto ou sistema proposto.Iniciar o projeto, organiza\'e7\'e3o e prepara\'e7\'e3o;\par
\par
2) N\'e3o , pois n\'e3o irei conseguir fazer um planejamento bom o suficiente sem conhecer os requisistos \par
\par
3)No desenvolvimento do software gen\'e9rico, quem produz o software controla a \par
especifica\'e7\'e3o, eles s\'e3o feitos para atender a necessidade do mercado. J\'e1 no \par
desenvolvimento sobre personalizado , quem compra que controla as especifica\'e7\'f5es, pois s\'e3o \par
feitos para atender a necessidade do cliente especifico.\par
\par
4)Conformidade: N\'e3o \'e9 s\'f3 o Software que sofre com os problemas de complexidade, a f\'edsica por exemplo tamb\'e9m sofre, no entanto, diferentemente desta \'faltima o Software n\'e3o possui leis imut\'e1veis as quais se possa agarrar. O Software precisa se adaptar a todo tipo de interface, sistema ou institui\'e7\'e3o existente, e se n\'e3o bastasse, estes supostos padr\'f5es mudam de tempos em tempos de acordo com a moda do momento. \par
Alterabilidade: O Software \'e9 constantemente sujeito a press\'f5es por mudan\'e7a. Isso se deve a sua caracter\'edstica abstrata que lhe confere a impress\'e3o de que mudan\'e7as s\'e3o f\'e1ceis de se fazer, muito diferente daquilo que ocorre com os produtos manufaturados do mundo f\'edsico. Para tal, basta se comparar a quantidade de recalls que acontecem no setor automobil\'edstico com a quantidade de atualiza\'e7\'f5es na ind\'fastria de Software. Esta caracter\'edstica \'e9 em parte ben\'e9fica por permitir uma \lquote r\'e1pida\rquote  evolu\'e7\'e3o dos sistemas, entretanto, paga-se o pre\'e7o para tal.\par
Invisibilidade: Software \'e9 de fato invis\'edvel, n\'e3o \'e9 poss\'edvel representa-lo a partir de formas geom\'e9tricas ou outras formas compreendidas pelo senso comum. Esta caracter\'edstica representa um grande desafio para o projeto de sistemas e a sua representa\'e7\'e3o para terceiros.\par
\par
5) Cascata: modelo em cascata tem o grande m\'e9rito de ser o primeiro a impor o planejamento e o gerenciamento ao processo de software, que antes era casual. O nome "cascata" foi atribu\'eddo em raz\'e3o da sequ\'eancia das fases, onde cada fase s\'f3 come\'e7a quando a anterior termina; e da transmiss\'e3o do resultado da fase anterior como entrada para a fase atual \par
Incremental: Neste modelo os requisitos do cliente s\'e3o obtidos, e, de acordo com a funcionalidade, s\'e3o agrupados em m\'f3dulos. Ap\'f3s este agrupamento, a equipe, junto ao cliente, define a prioridade em que cada m\'f3dulo ser\'e1 desenvolvido, escolha baseada na import\'e2ncia daquela funcionalidade ao neg\'f3cio do cliente.\par
\par
6) Prototipagem \'e9 a constru\'e7\'e3o de um exemplar do que foi entendido dos requisitos capturados do cliente. Pode ser considerado um ciclo de vida ou pode ser usado como ferramenta em outros ciclos de vida.\par
Vantagens e Desvantagens\par
A maior vantagem da prototipagem \'e9 que ela impede que fatores (funcionalidades, processos etc) importantes sejam esquecidos. Isso tamb\'e9m impede que suposi\'e7\'f5es sejam  implementadas no projeto. A prototipagem pode ser particularmente \'fatil quando uma equipe se depara com v\'e1rias ideias e n\'e3o tem certeza de qual caminho seguir. Algumas desvantagens no uso de prot\'f3tipos s\'e3o: a condu\'e7\'e3o a uma an\'e1lise insuficiente do software; os usu\'e1rios esperam um desempenho do software final igual ao do prot\'f3tipo; os clientes podem tornar-se unidos demais a seus prot\'f3tipos. \par
\par
7) 1- Na Defini\'e7\'e3o de Objetivos, desempenhos, funcionalidade, entre outros objetivos, s\'e3o levantados. Visando alcan\'e7ar esses objetivos s\'e3o listadas alternativas e restri\'e7\'f5es, e cria-se um plano gerencial detalhado.\par
2- Na An\'e1lise de Riscos, as alternativas, restri\'e7\'f5es e riscos anteriormente levantados s\'e3o avaliados. Neste setor (por\'e9m n\'e3o apenas neste) prot\'f3tipos s\'e3o utilizados para ajudar na an\'e1lise de riscos.\par
3- No Desenvolvimento e Valida\'e7\'e3o um modelo apropriado para o desenvolvimento do sistema \'e9 escolhido, de acordo com o risco analisado no setor anterior (cascata, interativo,...).\par
4- No Planejamento da Pr\'f3xima fase ocorre a revis\'e3o do projeto e a decis\'e3o de partir para a pr\'f3xima fase.\par
\par
8) Desenvolver o sistema interativamente , gerencia requesisto , Arquitetura baseada em componentes , modelo de software visualmente , verificar qualidade de software e controlar as munda\'e7as de software \par
\par
9) b\par
\par
10) b\par
\par
11) d\par
\par
12) e\par
\par
\par
\par
}
 